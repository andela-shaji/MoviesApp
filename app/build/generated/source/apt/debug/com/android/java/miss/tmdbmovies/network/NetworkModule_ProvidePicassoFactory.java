// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.android.java.miss.tmdbmovies.network;

import android.content.Context;
import com.squareup.picasso.Picasso;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class NetworkModule_ProvidePicassoFactory implements Factory<Picasso> {
  private final NetworkModule module;

  private final Provider<Context> contextProvider;

  public NetworkModule_ProvidePicassoFactory(
      NetworkModule module, Provider<Context> contextProvider) {
    assert module != null;
    this.module = module;
    assert contextProvider != null;
    this.contextProvider = contextProvider;
  }

  @Override
  public Picasso get() {
    return Preconditions.checkNotNull(
        module.providePicasso(contextProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Picasso> create(NetworkModule module, Provider<Context> contextProvider) {
    return new NetworkModule_ProvidePicassoFactory(module, contextProvider);
  }

  /** Proxies {@link NetworkModule#providePicasso(Context)}. */
  public static Picasso proxyProvidePicasso(NetworkModule instance, Context context) {
    return instance.providePicasso(context);
  }
}
